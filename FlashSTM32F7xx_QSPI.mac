__setup()
{
__var Reg;

  __message "---- Setup QSPI ----" ;

  /*Enable and Reset QSPI*/
  Reg = __readMemory32(0x40023838, "Memory");  // RCC.AHB3ENR enable QSPI
  Reg |= (0x01UL<<1);
  __writeMemory32(Reg, 0x40023838, "Memory");

  Reg = __readMemory32(0x40023818, "Memory");  // RCC.AHB3RSTR reset assert QSPI
  Reg |= (0x01UL<<1);
  __writeMemory32(Reg, 0x40023818, "Memory");

  Reg = __readMemory32(0x40023818, "Memory");  // RCC.AHB3RSTR reset release QSPI
  Reg &= ~(0x01UL<<1);
  __writeMemory32(Reg, 0x40023818, "Memory");


  /*Set QSPI pins*/
  /*Enable GPIOB & GPIOF*/
  Reg = __readMemory32(0x40023830, "Memory");  // RCC.AHB1ENR enable GPIOB & GPIOF
  Reg |= ((0x1UL<<5) | (0x1UL<<1));
  __writeMemory32(Reg, 0x40023830, "Memory");

  /* CLK(PB2) & CS(PB6) pins*/
  Reg = __readMemory32(0x40020420, "Memory");  // GPIOB.AFR[0]
  Reg &= ~((0x0FUL << 24) | (0x0FUL << 8));
  Reg |=  ((0x0AUL << 24) | (0x09UL << 8));
  __writeMemory32(Reg, 0x40020420, "Memory");

  Reg = __readMemory32(0x40020400, "Memory");  // GPIOB.MODER
  Reg &= ~((0x03UL << 12) | (0x03UL << 4));
  Reg |=  ((0x02UL << 12) | (0x02UL << 4));
  __writeMemory32(Reg, 0x40020400, "Memory");

  Reg = __readMemory32(0x40020404, "Memory");  // GPIOB.OTYPER
  Reg &= ~((1UL << 6) | (1UL << 2));
  __writeMemory32(Reg, 0x40020404, "Memory");

  Reg = __readMemory32(0x40020408, "Memory");  // GPIOB.OSPEEDR
  Reg |=  ((0x3UL << 12) | (0x3UL << 4));
  __writeMemory32(Reg, 0x40020408, "Memory");

  Reg = __readMemory32(0x4002040C, "Memory");  // GPIOB.PUPDR
  Reg &= ~((0x03UL << 12) | (0x03UL << 4));
  //Reg |=  (0x01UL << 12);
  __writeMemory32(Reg, 0x4002040C, "Memory");

  /* D0-D3 pins (PF6-PF9) */
  Reg = __readMemory32(0x40021420, "Memory");  // GPIOF.AFR[0]
  Reg &= ~((0xFUL << 28) | (0xFUL << 24));
  Reg |=  ((0x9UL << 28) | (0x9UL << 24));
  __writeMemory32(Reg, 0x40021420, "Memory");

  Reg = __readMemory32(0x40021424, "Memory");  // GPIOF.AFR[1]
  Reg &= ~((0xFUL << 4) | (0xFUL << 0));
  Reg |=  ((0xAUL << 4) | (0xAUL << 0));
  __writeMemory32(Reg, 0x40021424, "Memory");

  Reg = __readMemory32(0x40021400, "Memory");  // GPIOF.MODER
  Reg &= ~((0x3UL << 18) | (0x3UL << 16) | (0x3UL << 14) | (0x3UL << 12));
  Reg |=  ((0x2UL << 18) | (0x2UL << 16) | (0x2UL << 14) | (0x2UL << 12));
  __writeMemory32(Reg, 0x40021400, "Memory");

  Reg = __readMemory32(0x40021404, "Memory");  // GPIOF.OTYPER
  Reg &= ~((1UL << 9) | (1UL << 8) | (1UL << 7) | (1UL << 6));
  __writeMemory32(Reg, 0x40021404, "Memory");

  Reg = __readMemory32(0x40021408, "Memory");  // GPIOF.OSPEEDR
  Reg |= ((0x3UL << 18) | (0x3UL << 16) | (0x3UL << 14) | (0x3UL << 12));
  __writeMemory32(Reg, 0x40021408, "Memory");

  Reg = __readMemory32(0x4002140C, "Memory");  // GPIOF.PUPDR
  Reg &= ~((0x3UL << 18) | (0x3UL << 16) | (0x3UL << 14) | (0x3UL << 12));
  __writeMemory32(Reg, 0x4002140C, "Memory");

}

execUserFlashInit()
{
  __message"---- Prepare hardware for the flashloader ----";
  __setup();
}

execUserPreload()
{
  __message"---- Prepare hardware for the flashloader ----";
  __setup();
}
